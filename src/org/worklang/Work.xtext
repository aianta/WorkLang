grammar org.worklang.Work with org.eclipse.xtext.common.Terminals

generate work "http://www.worklang.org/Work"

Model:
	fields += Field*
	experts += Expert*
	plans += Plan*
	;
	
Field:
	'field' name = ID '{'
	'products' '{' productDefinitions += ProductDefinition* '}'
	'services' '{' serviceDefinitions += ServiceDefinition* '}'
	'}'
;

ServiceDefinition:
	(PrimitiveServiceDefinition|CompoundServiceDefinition) ';'
;

PrimitiveServiceDefinition:
	'primitive'
	produces = [PrimitiveProductDefinition]
	'requires' requires += [ProductDefinition]*
;

CompoundServiceDefinition:
	name = ID 
	'produces' produces += [CompoundProductDefinition]+
	'requires' requires += [ProductDefinition]*
	'implements' implementation = ServiceCompositionDefinition
	'onfeedback' feedbackAction = [ServiceDefinition]|HourlyServiceDefinition
;

ServiceCompositionDefinition:
	ServiceDefinitionSet|HourlyServiceDefinition
;

ServiceDefinitionSet:
	flow += [ServiceDefinition]+
;

HourlyServiceDefinition:
	service = 'hourly'
;

ProductDefinition:
	(PrimitiveProductDefinition|CompoundProductDefinition|NullProduct)';'
;

PrimitiveProductDefinition:
	name = ID
	'value' valueType = ValueType
;

CompoundProductDefinition:
	name = ID 
	'{' components += Component+ '}'
;

Component:
	ComponentSet|SingleComponent
;

ComponentSet:
	'setOf' set = [ProductDefinition]
;

SingleComponent:
	single = [ProductDefinition]
;

NullProduct:
	nullproduct = 'nothing'
;


Expert:
	'expert' name = ID '{'
	'skills' '{' skills += Skill* '}'
	'knowledge' '{' knowledge += Knowledge* '}'
	'hourlyrate' hourlyRate = '$' INT
;

Skill:
	serviceDefinition = [ServiceDefinition]
	'duration' duration = STRING
	'cost' cost = STRING
	';'
;

Knowledge:
	productDefinition = [ProductDefinition] ';'
;

Plan:
	'goal' name = ID '{'
	'plan''{'flow += Step* '}'
	'}'
;

Product:
	PrimitiveProduct|CompoundProduct|NullProduct ';'
;

PrimitiveProduct:
	instanceof = [PrimitiveProductDefinition]
	'called' name = STRING 
	'value:' value = Value
;

CompoundProduct:
	instanceof = [ProductDefinition]
	'called' name = STRING
	'with' '{'values += Product+'}'
;

Step:
	'step' 
	stepIndex = INT
	name = STRING
	'using' implementingService = Service ';'
;

Service:
	instanceof = [ServiceDefinition] 
	'{' 'requiredInfo' requires += Product*'}'
	'target' produces += Product+
;
	
ValueType:
	('defined'|'determined')+
;

Value:
	(DefinedValue|DeterminedValue)+
;

DefinedValue:
	STRING
;

DeterminedValue:
	'determined'
;





